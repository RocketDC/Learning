import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Graph {
    public static LinkedList<Integer>[] adj;
    public Graph(int v) {
        adj = new LinkedList[v];
        for (int i = 0; i < adj.length; i++) {
            adj[i] = new LinkedList<>();
        }
    }
    public  void addEdge(int source, int destination){
        adj[source].add(destination);
        adj[destination].add(source);
    }

    public   int bfs(int source, int destination){
        boolean[] vis = new boolean[adj.length];
        int[] parent = new int[adj.length];
        Queue<Integer> q = new LinkedList<>();
        q.add(source);
        parent[source] =-1;
        vis[source] = true;


        while (!q.isEmpty()){
            int cur =  q.poll();
            if (cur ==destination)break;
            for (Integer neighbour : adj[cur]) {
                if (!vis[neighbour]){
                    vis[neighbour] = true;
                    parent[neighbour] = cur;
                    q.add(neighbour);

                }
            }
        }

        int distance = 0;
        int cur =destination;
        while (parent[cur] !=-1){
            System.out.print(cur+ " -> ");

            cur = parent[cur];
            distance++;
        }
        System.out.println(source);
        return distance;
    }

    public static void main(String[] args) {
        Scanner scr = new Scanner(System.in);
        System.out.println("Enter the No. of Vertices and Edges respectively");

        int v = scr.nextInt();
        int e = scr.nextInt();
        Graph graph = new Graph(v);
        System.out.println("Enter the " + e + " Edges format being  source<space>destination");

        for (int i = 0; i < e; i++) {
            int source = scr.nextInt();
            int destination = scr.nextInt();
            graph.addEdge(source, destination);

        }
        System.out.println("Enter the Start and the end point respectively");
        int destination = scr.nextInt();
        int source = scr.nextInt();

        int distance = graph.bfs(source, destination);
        System.out.println("Min distance between the points is "+ distance);
        scr.close();

    }







}
